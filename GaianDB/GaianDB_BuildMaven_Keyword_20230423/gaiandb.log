2023-04-21 14:47:02.216~241694700 GaianNode -------------> isInitDataUpToDate = false = GAIANDB_JAR_MD5 997A6B55C8463CC833A087400229F408 = gdbJarMD5_previous B378D79DB4E781A772F3449B906050F5 && gdbDbTimestampAtStartup 1682084597937 > gdbJarFile.lastModified() 1682081703134
GaianDB Custom Version: Reza Moosaei 2023_03_29_34
java version "17.0.6"
OpenJDK Runtime Environment (build 17.0.6+10-LTS)
OpenJDK 64-Bit Server VM (build 17.0.6+10-LTS, mixed mode, sharing)

GaianDB V2.1.8 - JAR sizes: [20947425, 20947425], timestamps: [2023/04/21-13:55:03, 2023/04/21-13:55:03]

Features Summary: Federated access to JDBC RDBMS tables and CSV Flat files using a logical table abstraction layer;
A stored procedures management API, e.g. to set and view all logical tables and data sources in the network;
SQL Prepared Statement caching; Connection Pooling; Buffered and batched multi-threaded record fetching;
Explain queries to show a query's route and row counts on node; Constant Column definitions for contextual annotations of logical tables;
Discovery of other Gaian Nodes when 'MIN_DISCOVERED_CONNECTIONS' is set, with preferential attachment to highly connected nodes;
Autonomic maintenance of 2-way connections, or re-discovery initiation upon loss of connections;
Automated dynamic management of SQL VIEWS for logical tables and their derivative definitions containing provenance columns or explain columns;
A Policy plugin interface to manipulate the incoming SQL queries or filter returned records;
Flexible GaianDB node discovery using config variable 'DISCOVERY_IP' to specify a broadcast mask or multicast group address;
New configuration parameters defining permitted hosts, denied hosts and cluster IDs to restrict connectivity between nodes;
Connectivity resilience to variable network latency using property 'GAIAN_CONNECTIONS_CHECKER_HEARTBEAT_MS';
MQTT listener & Message Storer; Command line processor; Logging levels; In Memory Tables and Indexing;
Ability to also access an Omnifind text index using com.ibm.db2j.ICAREST('<search_string>');
Excel Spreadsheet Data Source Type; 'Pass-through' SQL capability for insert/update/delete/call; Discovery Gateways for discovery across networks;
Advanced API calls: listnodes(), listflood(), addgateway();
Access control to allow/disallow SQL API configuration and propagated writes;
Basic security: User authentication and low-level automatic scrambling of passwords in the config file;
Detection and cancellation of hanging queries (not mistaken for long-running queries);
Pass-through sub-queries using 'GaianQuery': define exposed data sources on each node which the query will be executed against;
Performance metrics; Provenance columns: GAIAN_NODE, GAIAN_LEAF (queryable using option: 'with_provenance')

PROCESS ID:		12740

NODE ID:		cspc201

WORKING DIRECTORY:	C:\Users\dcsuser\Desktop\New-Solid\Meeting\Week 24\ESPRESSO\GaianDB\GaianS_V2.1.8_20230324
BYTECODE PATH:		C:\Users\dcsuser\Desktop\New-Solid\Meeting\Week 24\ESPRESSO\GaianDB\GaianS_V2.1.8_20230324\lib\GAIANDB-tools.jar
WORKSPACE:		C:\Users\dcsuser\Desktop\New-Solid\Meeting\Week 24\ESPRESSO\GaianDB\GaianS_V2.1.8_20230324

PHYSICAL DATABASE:	C:\Users\dcsuser\Desktop\New-Solid\Meeting\Week 24\ESPRESSO\GaianDB\GaianS_V2.1.8_20230324\gaiandb
LOG FILE:		C:\Users\dcsuser\Desktop\New-Solid\Meeting\Week 24\ESPRESSO\GaianDB\GaianS_V2.1.8_20230324\gaiandb.log
CONFIG FILE:		C:\Users\dcsuser\Desktop\New-Solid\Meeting\Week 24\ESPRESSO\GaianDB\GaianS_V2.1.8_20230324\gaiandb_config.properties

DERBY SERVER PORT:	6414
PROVENANCE HOST(S):	0.0.0.0

Network Interfaces: 
lo: Software Loopback Interface 1 /127.0.0.1, /0:0:0:0:0:0:0:1, Address: /127.0.0.1 -> Broadcast: /127.255.255.255, Address: /0:0:0:0:0:0:0:1 -> Broadcast: null
net0: Microsoft 6to4 Adapter 
eth0: WAN Miniport (Network Monitor) 
wlan0: Intel(R) Wi-Fi 6 AX201 160MHz /192.168.1.102, /2a01:4b00:8468:5a00:7e74:3e17:daa3:9fac, /fd00:0:0:0:2243:5b77:42be:4369, /2a01:4b00:8468:5a00:168:2553:3585:d751, /fd00:0:0:0:168:2553:3585:d751, /fe80:0:0:0:e9b0:ef47:bcef:3e83%wlan0, Address: /192.168.1.102 -> Broadcast: /192.168.1.255, Address: /2a01:4b00:8468:5a00:7e74:3e17:daa3:9fac -> Broadcast: null, Address: /fd00:0:0:0:2243:5b77:42be:4369 -> Broadcast: null, Address: /2a01:4b00:8468:5a00:168:2553:3585:d751 -> Broadcast: null, Address: /fd00:0:0:0:168:2553:3585:d751 -> Broadcast: null, Address: /fe80:0:0:0:e9b0:ef47:bcef:3e83%wlan0 -> Broadcast: null
net1: Microsoft IP-HTTPS Platform Adapter 
net2: WAN Miniport (IKEv2) 
eth1: Microsoft Kernel Debug Network Adapter 
eth2: Realtek USB GbE Family Controller 
eth3: Bluetooth Device (Personal Area Network) 
net3: WAN Miniport (L2TP) 
eth4: PANGP Virtual Ethernet Adapter 
net4: Microsoft Teredo Tunneling Adapter 
eth5: WAN Miniport (IP) 
eth6: WAN Miniport (IPv6) 
wlan1: Microsoft Wi-Fi Direct Virtual Adapter /fe80:0:0:0:f382:ad32:1b3:d2de%wlan1, Address: /fe80:0:0:0:f382:ad32:1b3:d2de%wlan1 -> Broadcast: null
net5: WAN Miniport (PPTP) 
net6: WAN Miniport (SSTP) 
ppp0: WAN Miniport (PPPOE) 
wlan2: Microsoft Wi-Fi Direct Virtual Adapter #2 /fe80:0:0:0:6492:15d8:fae7:a385%wlan2, Address: /fe80:0:0:0:6492:15d8:fae7:a385%wlan2 -> Broadcast: null
wlan3: Intel(R) Wi-Fi 6 AX201 160MHz-WFP Native MAC Layer LightWeight Filter-0000 
wlan4: Intel(R) Wi-Fi 6 AX201 160MHz-Virtual WiFi Filter Driver-0000 
wlan5: Intel(R) Wi-Fi 6 AX201 160MHz-Native WiFi Filter Driver-0000 
wlan6: Intel(R) Wi-Fi 6 AX201 160MHz-QoS Packet Scheduler-0000 
wlan7: Intel(R) Wi-Fi 6 AX201 160MHz-WFP 802.3 MAC Layer LightWeight Filter-0000 
wlan8: Microsoft Wi-Fi Direct Virtual Adapter-WFP Native MAC Layer LightWeight Filter-0000 
wlan9: Microsoft Wi-Fi Direct Virtual Adapter-Native WiFi Filter Driver-0000 
wlan10: Microsoft Wi-Fi Direct Virtual Adapter-QoS Packet Scheduler-0000 
wlan11: Microsoft Wi-Fi Direct Virtual Adapter-WFP 802.3 MAC Layer LightWeight Filter-0000 
wlan12: Microsoft Wi-Fi Direct Virtual Adapter #2-WFP Native MAC Layer LightWeight Filter-0000 
wlan13: Microsoft Wi-Fi Direct Virtual Adapter #2-Native WiFi Filter Driver-0000 
wlan14: Microsoft Wi-Fi Direct Virtual Adapter #2-QoS Packet Scheduler-0000 
wlan15: Microsoft Wi-Fi Direct Virtual Adapter #2-WFP 802.3 MAC Layer LightWeight Filter-0000 
eth7: WAN Miniport (IP)-WFP Native MAC Layer LightWeight Filter-0000 
eth8: WAN Miniport (IP)-QoS Packet Scheduler-0000 
eth9: WAN Miniport (IPv6)-WFP Native MAC Layer LightWeight Filter-0000 
eth10: WAN Miniport (IPv6)-QoS Packet Scheduler-0000 
eth11: WAN Miniport (Network Monitor)-WFP Native MAC Layer LightWeight Filter-0000 
eth12: WAN Miniport (Network Monitor)-QoS Packet Scheduler-0000 

Hostname: cspc201
Java localhost ip: 192.168.1.102
Local address designating initial default interface for multicast: 192.168.1.102


2023-04-21 14:47:02.237~262625100 GaianNode -------------> Initialising GaianNode...
2023-04-21 14:47:02.237~262699800 GaianNode -------------> GAIANDB.jar library has been changed (or db folder didn't exist or was older), so initialisation data (stored procs/funcs) is being re-loaded
2023-04-21 14:47:02.237~262741900 GaianNode -------------> Node details: cspc201 gaiandb <password>
2023-04-21 14:47:02.237~262806600 GaianNode -------------> Autonomic Discovery: Maintained connections sought through discovery: MIN_DISCOVERED_CONNECTIONS = 2
2023-04-21 14:47:02.238~262846400 GaianNode -------------> Autonomic Discovery: DISCOVERY_IP = <Default=230.255.255.255>
2023-04-21 14:47:02.238~262888200 GaianNode -------------> Autonomic Discovery: DISCOVERY_GATEWAYS = <Default=No gateways to other networks>
2023-04-21 14:47:02.238~262925600 GaianNode -------------> Autonomic Discovery: MULTICAST_INTERFACES = ALL
2023-04-21 14:47:02.238~262966400 GaianNode -------------> Connectivity: ACCESS_CLUSTERS = <Default=Connect to nodes which are not cluster members>
2023-04-21 14:47:02.238~263007600 GaianNode -------------> Connectivity: ACCESS_HOSTS_PERMITTED = <Default=Accept further connections from any host outside the defined clusters>
2023-04-21 14:47:02.238~263041900 GaianNode -------------> Connectivity: ACCESS_HOSTS_DENIED = <Default=Do not deny connections from any host in or outside the defined clusters>
2023-04-21 14:47:02.238~263126900 GaianNode -------------> Log level set to: NONE
2023-04-21 14:47:02.443~468934300 GaianNode -------------> Starting Derby Network Server, host mask 0.0.0.0, port 6414

Fri Apr 21 14:47:03 BST 2023 : Apache Derby Network Server - 10.10.2.1 - (1643489) started and ready to accept connections on port 6414
2023-04-21 14:47:03.497~522842800 GaianNode -------------> 
Derby Version: CSS10100/10.10.2.1 - (1643489)  - Java Version: 17.0.6 (OpenJDK 64-Bit Server VM)

GaianNode started for Derby network server with sslMode=off on port: 6414 at Fri Apr 21 14:47:03 BST 2023, startup time: 1435ms

2023-04-21 14:47:03.585~610571500 GaianNode -------------> Used Heap Memory changed by >10MB. jMemory (MB): 35.422096 (= 12%, jMemoryMax (MB): 268.435456). jMemoryNonHeap (MB): 27.972664 - (suspected hanging queries being checked: 0)
Fri Apr 21 14:47:08 BST 2023 : Max threads changed to 1000.
Fri Apr 21 14:47:08 BST 2023 : Max threads changed to 1000.
2023-04-21 14:47:33.586~611759400 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'coffee'
2023-04-21 14:47:35.104~129989100 FileImport -----------------> WARNING:

2023-04-21 14:47:35.104 ********** GDB_ERROR: DSWRAPPER_FILE_IMPORT_POSSIBLE_STRUCTURE_ERROR: FileImport exception in next(). Possible structure issue with file ./csvtestfiles/solid.csv, e.g. missing final record delimiter at EOF: java.sql.SQLException: com.ibm.db2j.tools.ImportExportSQLException: Data found on line 1 for column 2 after the stop delimiter
	java.sql.SQLException: com.ibm.db2j.tools.ImportExportSQLException: Data found on line 1 for column 2 after the stop delimiter
	at com.ibm.db2j.tools.ImportExportImpl.ImportAbstract.next(Unknown Source)
	at com.ibm.db2j.FileImport.nextRow(FileImport.java:319)
	at com.ibm.db2j.AbstractVTI.fetchNextRow(AbstractVTI.java:1122)
	at com.ibm.gaiandb.GaianResult.nextFastPathRow2(GaianResult.java:935)
	at com.ibm.gaiandb.GaianResult.nextFastPathRow(GaianResult.java:904)
	at com.ibm.gaiandb.GaianResult.run(GaianResult.java:643)
	at com.ibm.gaiandb.GaianSubResult.run(GaianSubResult.java:37)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2023-04-21 14:47:35.104 Documentation: file:///C:/Users/dcsuser/Desktop/New-Solid/Meeting/Week 24/ESPRESSO/GaianDB/GaianS_V2.1.8_20230324/doc/javadoc-errors/com/ibm/gaiandb/diags/GDBMessages.html#DSWRAPPER_FILE_IMPORT_POSSIBLE_STRUCTURE_ERROR


2023-04-21 14:47:37.938~963447600 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'coffee'
2023-04-21 14:48:03.871~896868700 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:48:05.592~618572500 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:48:06.854~879511900 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:48:08.851~877178800 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:48:15.426~451999700 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:48:16.512~537598000 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:48:22.844~869401700 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'is'
2023-04-21 14:48:38.076~101517700 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'who'
2023-04-21 14:48:39.900~926192900 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'who'
2023-04-21 14:48:41.148~173312200 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'who'
2023-04-21 14:48:50.277~302540000 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'a'
2023-04-21 14:50:28.962~988188900 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'want'
2023-04-21 14:50:59.810~835773400 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:51:05.890~915803600 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:51:07.632~657262100 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:51:40.301~327064500 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'this'
2023-04-21 14:51:42.212~238604200 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'this'
2023-04-21 14:51:43.368~393855000 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'this'
2023-04-21 14:53:26.826~851283100 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'is'
2023-04-21 14:54:01.311~336885700 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:54:07.050~74980100 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:54:08.145~171296400 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:54:09.076~101478100 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 14:54:39.402~427606200 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'want'
2023-04-21 14:55:12.735~760624000 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'i'
2023-04-21 14:55:14.598~622857200 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'i'
2023-04-21 14:55:15.607~633125700 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'i'
2023-04-21 14:55:23.190~215139900 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'i'
2023-04-21 14:55:24.184~209760300 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'i'
2023-04-21 15:00:11.758~784024000 VTIFile --------------------> VTIFile original-sql: select * from LTSOLID where term ='coffee'
2023-04-21 15:00:20.444~469710000 VTIFile --------------------> VTIFile original-sql: select * from LTSOLID where term ='Boom'
2023-04-21 15:06:11.364~389624600 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 15:06:13.616~641654800 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'boom'
2023-04-21 15:06:24.940~965632200 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'coffee'
2023-04-21 15:06:36.182~207169600 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'is'
2023-04-21 15:07:08.713~738365900 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'who'
2023-04-21 15:07:19.440~465401100 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'who'
2023-04-21 15:08:16.549~574352400 VTIFile --------------------> VTIFile original-sql: SELECT * FROM LTSOLID WHERE term =  'coffee'
